from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMenu, QMenuBar, QAction
from main import Task, startDb, getAllTasks


class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.initUI(MainWindow)


    def _createMenuBar(self, MainWindow):
        menuBar = QMenuBar(MainWindow)
        menuBar.addAction(self.newTaskAction)
        checkTasksMenu = menuBar.addMenu("& Check your tasks")
        menuBar.addMenu(checkTasksMenu)
        checkTasksMenu.addAction(self.allTasksAction)
        checkTasksMenu.addSeparator()
        checkTasksMenu.addAction(self.forTodayAction)
        checkTasksMenu.addSeparator()
        checkTasksMenu.addAction(self.forTomorrowAction)
        checkTasksMenu.addSeparator()
        checkTasksMenu.addAction(self.urgentAction)
        checkTasksMenu.addSeparator()
        checkTasksMenu.addAction(self.notUrgentAction)
        menuBar.adjustSize()


    def _createActions(self):
        self.newTaskAction = QAction('& New task', self)
        self.allTasksAction = QAction('& All', self)
        self.forTodayAction = QAction('& For today', self)
        self.forTomorrowAction = QAction('& For tomorrow', self)
        self.urgentAction = QAction('& Urgent', self)
        self.notUrgentAction = QAction('& Not urgent', self)


    def initUI(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 620)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.window_label = QtWidgets.QLabel(self.centralwidget)
        self.window_label.setGeometry(QtCore.QRect(260, 20, 231, 51))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(22)
        self.window_label.setFont(font)
        self.window_label.setObjectName("window_label")
        self.newtask_title_label = QtWidgets.QLabel(self.centralwidget)
        self.newtask_title_label.setGeometry(QtCore.QRect(70, 90, 41, 41))
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.newtask_title_label.setFont(font)
        self.newtask_title_label.setObjectName("newtask_title_label")
        self.newtask_description_label = QtWidgets.QLabel(self.centralwidget)
        self.newtask_description_label.setGeometry(QtCore.QRect(20, 170, 111, 41))
        self.newtask_description_label.setFont(font)
        self.newtask_description_label.setObjectName("newtask_description_label")
        self.newtask_deadline = QtWidgets.QDateEdit(self.centralwidget)
        self.newtask_deadline.setGeometry(QtCore.QRect(130, 360, 140, 41))
        self.newtask_deadline.setFont(font)
        self.newtask_deadline.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.newtask_deadline.setObjectName("newtask_deadline")
        self.newtask_deadline_label = QtWidgets.QLabel(self.centralwidget)
        self.newtask_deadline_label.setGeometry(QtCore.QRect(30, 370, 71, 41))
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.newtask_deadline_label.setFont(font)
        self.newtask_deadline_label.setObjectName("newtask_deadline_label")
        self.newtask_isurgent_label = QtWidgets.QLabel(self.centralwidget)
        self.newtask_isurgent_label.setGeometry(QtCore.QRect(30, 430, 71, 41))
        self.newtask_isurgent_label.setFont(font)
        self.newtask_isurgent_label.setObjectName("newtask_isurgent_label")
        self.newtask_title = QtWidgets.QLineEdit(self.centralwidget)
        self.newtask_title.setGeometry(QtCore.QRect(130, 90, 621, 41))
        self.newtask_title.setFont(font)
        self.newtask_title.setMaxLength(50)
        self.newtask_title.setObjectName("newtask_title")
        self.newtask_description = QtWidgets.QTextEdit(self.centralwidget)
        self.newtask_description.setGeometry(QtCore.QRect(130, 170, 621, 151))
        self.newtask_description.setFont(font)
        self.newtask_description.setMouseTracking(True)
        self.newtask_description.setObjectName("newtask_description")
        self.newtask_isurgent = QtWidgets.QComboBox(self.centralwidget)
        self.newtask_isurgent.setGeometry(QtCore.QRect(130, 420, 140, 41))
        self.newtask_isurgent.setFont(font)
        self.newtask_isurgent.setObjectName("newtask_isurgent")
        self.newtask_isurgent.addItem("")
        self.newtask_isurgent.addItem("")
        self.newtask_save = QtWidgets.QPushButton(self.centralwidget)
        self.newtask_save.setGeometry(QtCore.QRect(250, 520, 121, 51))
        self.newtask_save.setFont(font)
        self.newtask_save.setObjectName("newtask_save")
        self.newtask_close = QtWidgets.QPushButton(self.centralwidget)
        self.newtask_close.setGeometry(QtCore.QRect(430, 520, 121, 51))
        self.newtask_close.setFont(font)
        self.newtask_close.setObjectName("newtask_close")
        MainWindow.setCentralWidget(self.centralwidget)
        self._createActions()
        self._createMenuBar(MainWindow)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Task scheduler"))
        self.window_label.setText(_translate("MainWindow", "Add a new task"))
        self.window_label.adjustSize()
        self.newtask_title_label.setText(_translate("MainWindow", "Title:"))
        self.newtask_description_label.setText(_translate("MainWindow", "Description: "))
        self.newtask_deadline_label.setText(_translate("MainWindow", "Deadline:"))
        self.newtask_deadline_label.adjustSize()
        self.newtask_isurgent_label.setText(_translate("MainWindow", "Is urgent?"))
        self.newtask_isurgent_label.adjustSize()
        self.newtask_deadline.setDateTime(QtCore.QDateTime.currentDateTime())
        self.newtask_deadline.setMaximumDate(QtCore.QDate(2100, 12, 28))
        self.newtask_deadline.setCalendarPopup(True)
        self.newtask_title.setPlaceholderText(_translate("MainWindow", "title required"))
        self.newtask_isurgent.setItemText(0, _translate("MainWindow", "Yes"))
        self.newtask_isurgent.setItemText(1, _translate("MainWindow", "No"))
        self.newtask_save.setText(_translate("MainWindow", "Save"))
        self.newtask_close.setText(_translate("MainWindow", "Close"))
        self.newtask_close.clicked.connect(QtWidgets.qApp.quit)
        self.newtask_save.clicked.connect(self.saveTask)

    def saveTask(self):
        name = self.newtask_title.text()
        description = self.newtask_description.toPlainText()
        deadline = self.newtask_deadline.text()
        is_urgent = self.newtask_isurgent.currentText()
        completed_task = Task(name, description, deadline, is_urgent)
        completed_task.addTaskToDb()
        getAllTasks()


if __name__ == "__main__":
    import sys
    startDb()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.initUI(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
